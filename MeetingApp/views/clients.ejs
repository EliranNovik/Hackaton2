<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Clients</title>
    <link rel="stylesheet" href="/css/styles.css">
</head>
<body>

    <!-- üîπ Navbar -->
    <nav class="navbar">
        <div class="navbar-left">
            <ul>
                <li><a href="/">Home</a></li>
                <li><a href="/clients">Clients</a></li>
                <li><a href="/meetings">Meetings</a></li>
            </ul>
        </div>

        <!-- üîπ Center Section (Search & Dropdown) -->
        <div class="navbar-center">
    <input type="text" id="searchInput" class="search-bar" placeholder="Search clients..." onkeyup="searchClients()">
    <select id="clientDropdown" class="client-select" onchange="showSelectedClient()">
        <option value="">-- Select Client --</option>
        <% clients.forEach(client => { %>
            <option value="<%= client.id %>" 
                    data-name="<%= client.name %>" 
                    data-email="<%= client.email %>" 
                    data-phone="<%= client.phone %>" 
                    data-topic="<%= client.topic %>" 
                    data-description="<%= client.description %>">
                <%= client.name %>
            </option>
        <% }) %>
    </select>
    
    <!-- üîπ Styled Search Results Box -->
    <div id="searchResults" class="search-results"></div>
</div>

        <!-- üîπ Right Section (Hamburger Menu) -->
        <div class="navbar-right">
            <div class="menu-toggle" onclick="toggleMenu()">‚ò∞</div>
        </div>
    </nav>

    <!-- üîπ Mobile Menu -->
    <div id="mobileMenu" class="mobile-menu">
        <ul>
            <li><a href="#" onclick="toggleAddClientForm()">Add New Client</a></li>
        </ul>
    </div>

    <!-- üîπ Search Results -->
    <div id="searchResults" class="search-results"></div>

    <!-- üîπ Client List -->
    <div id="clientListContainer"></div>

    <!-- üîπ Add Client Form -->
    <div id="addClientFormContainer" style="display: none; margin-top: 80px; color: black;">
        <h2>Add a New Client</h2>
        <form id="addClientForm" action="/clients/add" method="POST">
            <input type="text" name="name" placeholder="Name" required>
            <input type="email" name="email" placeholder="Email" required>
            <input type="text" name="phone" placeholder="Phone">
            <input type="text" name="topic" placeholder="Topic">
            <textarea name="description" placeholder="Case Description"></textarea>
            <button type="submit">Add Client</button>
        </form>
    </div>

    <!-- üîπ Edit Client Modal -->
    <div id="editClientModal" style="display: none;">
        <h2>Edit Client</h2>
        <form id="editClientForm">
            <input type="hidden" id="editClientId" name="clientId">
            <input type="text" id="editName" name="name" required>
            <input type="email" id="editEmail" name="email" required>
            <input type="text" id="editPhone" name="phone">
            <input type="text" id="editTopic" name="topic">
            <textarea id="editDescription" name="description"></textarea>
            <button type="submit">Update Client</button>
            <button type="button" onclick="closeEditForm()">Cancel</button>
        </form>
    </div>

    <script>
        async function searchClients() {
    let searchQuery = document.getElementById("searchInput").value.trim();
    let resultsContainer = document.getElementById("searchResults");

    if (searchQuery.length === 0) {
        resultsContainer.innerHTML = "";
        resultsContainer.style.display = "none";
        return;
    }

    try {
        const response = await fetch(`/clients/search?q=${searchQuery}`);
        const clients = await response.json();

        let resultsHTML = "<ul>";
        if (clients.length > 0) {
            clients.forEach(client => {
                resultsHTML += `
                    <li onclick="selectClient('${client.id}', '${client.name}', '${client.email}', '${client.phone}', '${client.topic}', '${client.description}')">
                        <strong>${client.name}</strong> - ${client.email}
                    </li>
                `;
            });
            resultsHTML += "</ul>";
        } else {
            resultsHTML = "<p style='padding: 10px; text-align: center;'>No matching clients found.</p>";
        }

        resultsContainer.innerHTML = resultsHTML;
        resultsContainer.style.display = "block";
    } catch (error) {
        console.error("‚ùå Error searching clients:", error);
    }
}

        function selectClient(id, name, email, phone, topic, description) {
            let clientListContainer = document.getElementById("clientListContainer");

            let existingClient = document.getElementById(`client-${id}`);
            if (existingClient) return; // Avoid duplicate listings

            let clientBox = document.createElement("div");
            clientBox.classList.add("client-box");
            clientBox.id = `client-${id}`;
            clientBox.innerHTML = `
                <p><strong>Name:</strong> ${name}</p>
                <p><strong>Email:</strong> ${email}</p>
                <p><strong>Phone:</strong> ${phone}</p>
                <p><strong>Topic:</strong> ${topic}</p>
                <p><strong>Description:</strong> ${description}</p>
                <button onclick="openEditForm('${id}', '${name}', '${email}', '${phone}', '${topic}', '${description}')">Edit</button>
                <button onclick="deleteClient('${id}')">Delete</button>
                <button type="button" onclick="removeClient('${id}')">Remove</button>
            `;

            clientListContainer.appendChild(clientBox);
            document.getElementById("searchResults").style.display = "none";
        }

        async function deleteClient(clientId) {
            if (confirm("Are you sure you want to delete this client?")) {
                const response = await fetch(`/clients/delete/${clientId}`, { method: "DELETE" });
                if (response.ok) {
                    document.getElementById(`client-${clientId}`).remove();
                } else {
                    alert("Error deleting client");
                }
            }
        }

        function removeClient(clientId) {
            document.getElementById(`client-${clientId}`).remove();
        }

        function openEditForm(id, name, email, phone, topic, description) {
            document.getElementById("editClientId").value = id;
            document.getElementById("editName").value = name;
            document.getElementById("editEmail").value = email;
            document.getElementById("editPhone").value = phone;
            document.getElementById("editTopic").value = topic;
            document.getElementById("editDescription").value = description;
            document.getElementById("editClientModal").style.display = "block";
        }

        function closeEditForm() {
            document.getElementById("editClientModal").style.display = "none";
        }

        function showSelectedClient() {
    let selectedClientId = document.getElementById("clientDropdown").value;

    if (!selectedClientId) return; // Exit if no client is selected

    // Find the selected client's details from the dropdown options
    let selectedOption = document.querySelector(`#clientDropdown option[value='${selectedClientId}']`);
    
    if (!selectedOption) return;

    // Extract client details stored in the dataset attributes
    let name = selectedOption.getAttribute("data-name");
    let email = selectedOption.getAttribute("data-email");
    let phone = selectedOption.getAttribute("data-phone");
    let topic = selectedOption.getAttribute("data-topic");
    let description = selectedOption.getAttribute("data-description");

    // Pass client details to `selectClient` function
    selectClient(selectedClientId, name, email, phone, topic, description);
}


        function toggleMenu() {
            let mobileMenu = document.getElementById("mobileMenu");
            mobileMenu.style.display = mobileMenu.style.display === "block" ? "none" : "block";
        }

        function toggleAddClientForm() {
            let formContainer = document.getElementById("addClientFormContainer");
            formContainer.style.display = formContainer.style.display === "none" ? "block" : "none";
        }
    </script>

</body>
</html>
